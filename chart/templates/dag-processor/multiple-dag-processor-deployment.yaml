# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

################################
## Airflow Dag Processor Deployment
#################################
{{- if semverCompare ">=2.3.0" .Values.airflowVersion }}
{{- if .Values.multipleDagProcessor.enabled }}
{{- if .Values.dagProcessor.enabled }}
{{- fail "Invalid function type" }}
{{- end}}
{{- $Global := . }}
{{- range $i, $processor := .Values.multipleDagProcessor.processors }}
{{- $nodeSelector := or $processor.nodeSelector $Global.Values.nodeSelector }}
{{- $affinity := or $processor.affinity $Global.Values.affinity }}
{{- $tolerations := or $processor.tolerations $Global.Values.tolerations }}
{{- $topologySpreadConstraints := or $processor.topologySpreadConstraints $Global.Values.topologySpreadConstraints }}
{{- $revisionHistoryLimit := or $processor.revisionHistoryLimit $Global.Values.revisionHistoryLimit }}
{{- $securityContext := include "airflowSecurityContext" (list $Global $processor) }}


kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $Global.Release.Name }}-{{ $processor.name }}
  labels:
    tier: airflow
    component: dag-processor
    release: {{ $Global.Release.Name }}
    chart: "{{ $Global.Chart.Name }}-{{ $Global.Chart.Version }}"
    heritage: {{ $Global.Release.Service }}
    {{- with $Global.Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- if  $processor.annotations }}
  annotations: {{- toYaml  $processor.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{  $processor.replicas }}
  {{- if $revisionHistoryLimit }}
  revisionHistoryLimit: {{ $revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      tier: airflow
      component: dag-processor
      release: {{ $Global.Release.Name }}
  {{- if  $processor.strategy }}
  strategy: {{- toYaml  $processor.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        tier: airflow
        component: dag-processor
        release: {{ $Global.Release.Name }}
        {{- with $Global.Values.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/metadata-secret: {{ include (print $Global.Template.BasePath "/secrets/metadata-connection-secret.yaml") $Global | sha256sum }}
        checksum/pgbouncer-config-secret: {{ include (print $Global.Template.BasePath "/secrets/pgbouncer-config-secret.yaml") $Global | sha256sum }}
        checksum/airflow-config: {{ include (print $Global.Template.BasePath "/configmaps/configmap.yaml") $Global | sha256sum }}
        checksum/extra-configmaps: {{ include (print $Global.Template.BasePath "/configmaps/extra-configmaps.yaml") $Global | sha256sum }}
        checksum/extra-secrets: {{ include (print $Global.Template.BasePath "/secrets/extra-secrets.yaml") $Global | sha256sum }}
        {{- if $processor.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
        {{- if $Global.Values.airflowPodAnnotations }}
          {{- toYaml $Global.Values.airflowPodAnnotations | nindent 8 }}
        {{- end }}
        {{- if $processor.podAnnotations }}
          {{- toYaml $processor.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if $processor.priorityClassName }}
      priorityClassName: {{ $processor.priorityClassName }}
      {{- end }}
      nodeSelector: {{- toYaml $nodeSelector | nindent 8 }}
      affinity:
      {{- if $affinity }}
        {{- toYaml $affinity | nindent 8 }}
      {{- else }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  component: dag-processor
              topologyKey: kubernetes.io/hostname
            weight: 100
      {{- end }}
      tolerations: {{- toYaml $tolerations | nindent 8 }}
      topologySpreadConstraints: {{- toYaml $topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ $processor.terminationGracePeriodSeconds }}
      restartPolicy: Always
      serviceAccountName: {{ include "multipleDagProcessor.serviceAccountName" (dict "Processor" $processor "Global" $Global) }}
      securityContext: {{ $securityContext | nindent 8 }}
      {{- if or $Global.Values.registry.secretName $Global.Values.registry.connection }}
      imagePullSecrets:
        - name: {{ template "registry_secret" $ }}
      {{- end }}
      initContainers:
        {{- if $processor.waitForMigrations.enabled }}
        - name: wait-for-airflow-migrations
          resources: {{- toYaml $processor.resources | nindent 12 }}
          image: {{ template "airflow_image_for_migrations" $ }}
          imagePullPolicy: {{ $Global.Values.images.airflow.pullPolicy }}
          volumeMounts: {{- include "airflow_config_mount" $ | nindent 12 }}
          args: {{- include "wait-for-migrations-command" $ | nindent 10 }}
          envFrom: {{- include "custom_airflow_environment_from" $ | default "\n  []" | nindent 10 }}
          env:
            {{- include "custom_airflow_environment" $ | nindent 10 }}
            {{- include "standard_airflow_environment" $ | nindent 10 }}
            {{- if $processor.waitForMigrations.env }}
              {{- tpl (toYaml $processor.waitForMigrations.env) $ | nindent 12 }}
            {{- end }}
        {{- end }}
        {{- if and ($Global.Values.dags.gitSync.enabled) (not $Global.Values.dags.persistence.enabled) }}
          {{- include "git_sync_container" (dict "Values" $Global.Values "is_init" "true") | nindent 8 }}
        {{- end }}
        {{- if $processor.extraInitContainers }}
          {{- toYaml $processor.extraInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: dag-processor
          image: {{ template "airflow_image" $ }}
          imagePullPolicy: {{ $Global.Values.images.airflow.pullPolicy }}
          {{- if $processor.command }}
          command: {{ tpl (toYaml $processor.command) . | nindent 12 }}
          {{- end }}
          {{- if $processor.args }}
          args: {{ tpl (toYaml $processor.args) $ | nindent 12 }}
          {{- end }}
          resources: {{- toYaml $processor.resources | nindent 12 }}
          volumeMounts:
            {{- if $Global.Values.volumeMounts }}
              {{- toYaml $Global.Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if $processor.extraVolumeMounts }}
              {{ toYaml $processor.extraVolumeMounts | nindent 12 }}
            {{- end }}
            - name: logs
              mountPath: {{ template "airflow_logs" $ }}
            {{- include "airflow_config_mount" $ | nindent 12 }}
            {{- if or $Global.Values.dags.persistence.enabled $Global.Values.dags.gitSync.enabled }}
              {{- include "airflow_dags_mount" $ | nindent 12 }}
            {{- end }}
          envFrom: {{- include "custom_airflow_environment_from" $ | default "\n  []" | nindent 10 }}
          env:
            {{- include "custom_airflow_environment" $ | nindent 10 }}
            {{- include "standard_airflow_environment" $ | nindent 10 }}
            {{- include "container_extra_envs" (list $ $processor.env) | indent 10 }}
          livenessProbe:
            initialDelaySeconds: {{ $processor.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $processor.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $processor.livenessProbe.failureThreshold }}
            periodSeconds: {{ $processor.livenessProbe.periodSeconds }}
            exec:
              command:
                  {{- if $processor.livenessProbe.command }}
                  {{ toYaml $processor.livenessProbe.command | nindent 16 }}
                  {{- else }}
                  {{- include "dag_processor_liveness_check_command" $ | nindent 16 }}
                  {{- end }}
        {{- if and ($Global.Values.dags.gitSync.enabled) (not $Global.Values.dags.persistence.enabled) }}
          {{- include "git_sync_container" $ | indent 8 }}
        {{- end }}
        {{- if $processor.extraContainers }}
          {{- toYaml $processor.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "airflow_config" $ }}
        {{- if $Global.Values.dags.persistence.enabled }}
        - name: dags
          persistentVolumeClaim:
            claimName: {{ template "airflow_dags_volume_claim" $ }}
        {{- else if $Global.Values.dags.gitSync.enabled }}
        - name: dags
          emptyDir: {}
        {{- end }}
        {{- if and $Global.Values.dags.gitSync.enabled $Global.Values.dags.gitSync.sshKeySecret }}
          {{- include "git_sync_ssh_key_volume" $ | indent 8 }}
        {{- end }}
        {{- if $Global.Values.volumes }}
          {{- toYaml $Global.Values.volumes | nindent 8 }}
        {{- end }}
        {{- if $processor.extraVolumes }}
          {{- toYaml $processor.extraVolumes | nindent 8 }}
        {{- end }}
        {{- if $Global.Values.logs.persistence.enabled }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ template "airflow_logs_volume_claim" $ }}
        {{- else }}
        - name: logs
          emptyDir: {}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
